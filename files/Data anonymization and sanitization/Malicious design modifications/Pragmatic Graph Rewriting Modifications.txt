we present new pragmatic constructs for easing programming in visual graph rewriting programming languages. the first is a modification to the rewriting process for nodes the host graph, where nodes specified as 'once only' in the lhs of a rewrite match at most once with a corresponding node in the host graph. this reduces the previously common use of tags to indicate the progress of matching in the graph. the second modification controls the application of lhs graphs, where those specified as 'single match' are tested against the host graph one time only. this reduces the need for control flags to indicate the progress of execution of transformations.