this paper presents a process for the reengineering of computer-based control systems, and describes tools that automate portions of the process. the intermediate representation (ir) for capturing features of computer-based systems during reverse engineering is presented. a novel feature of the ir is that it incorporates the control system software architecture, a view that enables information to be captured at five levels of granularity: the program level, the task level, the package level, the subprogram level, and the statement level. a reverse engineering toolset that constructs the ir from ada programs, displays the ir, and computes metrics for concurrency, communication and object-orientedness is also presented.prism: a reverse engineering toolset