tamper-resistant software has been studied as techniques to protect algorithm or secret data. there are many ways to realize tamper-resistant software including the method of making software hard to read. so far, no objective and quantitative method is known for evaluating tamper-resistant software. most of known evaluation methods require involvement of human being. that means their evaluation results deeply depend on the skill and subjectivity of human. therefore, it has been expected to devise an objective and quantitative evaluation method in place of subjective evaluation methods. in this paper we propose a new such method to measure how hard to read. the basic idea is to use the parse tree of a compiler for a programming language, and evaluate depth and weights of the tree for a code. we give some experimental results to examine its effectiveness.an approach to the objective and quantitative evaluation of tamper-resistant software