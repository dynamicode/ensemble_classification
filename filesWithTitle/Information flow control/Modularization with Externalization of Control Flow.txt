the architectural design decides the quality and the longevity of the software. gross decomposition of a system into interacting components using proper abstractions for component interaction defines the modularity of the system which in turn decides the values of quality attributes such as performance, reliability, security and modifiability as well as the percentage of design reuse. the decisions of modularization are supported by metrics like cohesion and coupling. in this paper we will focus on the quality attributes, modifiability and evolvability of a system which are overlapping to a large extent and which mainly get affected by the modularization of the system. the principle of encapsulation in object oriented (oo) design overcame the flaws present in structured methodology due to separate data and process components and their interdependencies. but problems in the evolution of oo systems due to crosscutting concerns were resolved using aspect oriented paradigm. the externalization of business logic using rule-based systems also was taken as solution to the evolution of complex software systems. here we focus on the different existing modularization solutions which support the evolvability of a software and the framework cffes (control flow framework for evolving systems) proposed by us.modularization with externalization of control flow