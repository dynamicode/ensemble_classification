during software evolution, programmers devote most of their effort to the understanding of the structure and behavior of the system. for object-oriented code, this might be particularly hard, when multiple, scattered objects contribute to the same function. design views offer an invaluable help, but they are often not aligned with the code, when they are not missing at all.this tutorial describes some of the most advanced techniques that can be employed to reverse engineer several design views from the source code. the recovered diagrams, represented in uml (unified modeling language), include class, object, interaction (collaboration and sequence), state and package diagrams. a unifying static code analysis framework used by most of the involved algorithms is presented at the beginning of the tutorial. a single running example is referred all over the presentation. trade-offs (e.g., static vs. dynamic analysis), limitations and expected benefits are also discussed.reverse engineering of object oriented code