software tend to be omnipresent in all modern systems. it often manipulates critical resources which interests pirates and need to be secured. given the fact that most common software attacks can't be stopped or detected using conventional security mechanisms, malicious intruders try hack into systems by exploiting a software vulnerability. vulnerabilities result from the use of traditional development processes - not focusing on security concerns - and the lack of necessary knowledge and guidance on how to produce secure software. they include implementation bugs such as buffer overflows and design flaws such as inconsistent error handling. several efforts are undertaken, to improve secure software engineering, however, developers still miss or misuse acquired knowledge due to domain immaturity, newness of the field, process complexity and absence of environments supporting such development. this paper presents our approach addressing software application security issues through its development process using a strategy oriented process model. the main feature of the proposed process model is that it provides a two level guidance: 1) a strategic guidance helping the developer to choose one among a compilations of the existing methods, standards and best practices and 2) a tactic guidance helping the developer to achieve his selection. this process model is easily extensible and allows building customized processes adapted to the context, the developer's finalities and the product state.