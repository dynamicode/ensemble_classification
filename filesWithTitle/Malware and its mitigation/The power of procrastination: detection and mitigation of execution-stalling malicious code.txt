malware continues to remain one of the most important security problems on the internet today. whenever an anti-malware solution becomes popular, malware authors typically react promptly and modify their programs to evade defense mechanisms. for example, recently, malware authors have increasingly started to create malicious code that can evade dynamic analysis. one recent form of evasion against dynamic analysis systems is stalling code. stalling code is typically executed before any malicious behavior. the attacker's aim is to delay the execution of the malicious activity long enough so that an automated dynamic analysis system fails to extract the interesting malicious behavior. this paper presents the first approach to detect and mitigate malicious stalling code, and to ensure forward progress within the amount of time allocated for the analysis of a sample. experimental results show that our system, called hasten, works well in practice, and that it is able to detect additional malicious behavior in real-world malware samples.the power of procrastination: detection and mitigation of execution-stalling malicious code