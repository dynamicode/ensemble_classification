tamper-resistant software (trs) consists of two functional components: tamper detection and tamper response. although both are equally critical to the effectiveness of a trs system, past research has focused primarily on the former, while giving little thought to the latter. not surprisingly, many successful breaks of commercial trs systems found their first breaches at the relatively na&#239;ve tamper-response modules. in this paper, we describe a novel tamper-response system that evades hacker detection by introducing delayed, probabilistic failures in a program. this is accomplished by corrupting the program's internal state at well-chosen locations. our tamper-response system smoothly blends in with the program and leaves no noticeable traces behind, making it very difficult for a hacker to detect its existence. the paper also presents empirical results to demonstrate the efficacy of our system.