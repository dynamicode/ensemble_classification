due to limited available memory (of the order of kilobytes) on embedded devices (such as smart cards), we undertake an approach of partitioning the whole program when it does not fit in the memory. the program partitions are downloaded from the server on demand into the embedded device just before execution. we devise a method of partitioning the code and data of the program such that no information regarding the control flow behavior of the program is leaked out. this property is called tamper resistance and it is very important for secure embedded devices such as smart cards which could hold sensitive information and/or carry out critical computation such as financial transactions. a preliminary solution to this problem was proposed in our earlier work [1]. this work proposes a new and more comprehensive solution to the problem. first, we propose a new policy which is based on keeping nothing in terms of partitions on the smart card. this policy is unlike the one in previous work which mandated keeping partitions in memory to which control flow was guaranteed to return. based on this new policy, a new partitioning algorithm is proposed for minimal safe partitions which reduces their memory requirements over previous work. the drawback of this new policy is however lower execution speed due to frequent communication encountered. in order to not significantly degrade performance, we propose caching frequently executed functions on the smart card without violation of tamper resistance. a framework is designed to determine the set of functions to be cached in conjunction with specific minimal safe partitions. further reduction in memory requirements is achieved due to the data partitioning.the decrease in memory footprint over the previous method is 27% for code memory and 32.4% for data memory on average. the speed-up over the old method is quite significant when applied to whole programs in large benchmarks (500 times on average). the conclusion is that previous method [1] is not suitable as a whole program partitioning strategy whereas the new proposed method is a viable solution.tamper-resistant whole program partitioning