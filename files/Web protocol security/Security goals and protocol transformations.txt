cryptographic protocol designers work incrementally. having achieved some goals for confidentiality and authentication in a protocol &#928;1 , they transform it to a richer &#928;2 to achieve new goals. but do the original goals still hold? more precisely, if a goal formula &#915; holds whenever &#928;1 runs against an adversary, does a translation of &#915; hold whenever &#928;2 runs against it? we prove that a transformation preserves goal formulas if a labeled transition system for analyzing &#928;1 simulates a portion of an lts for analyzing &#928;2 , while preserving progress in that portion. thus, we examine the process of analyzing a protocol &#928;. we use ltss that describe &lt;em&gt;our&lt;/em&gt; activity when &lt;em&gt;analyzing&lt;/em&gt; &#928;, not that of the principals &lt;em&gt;executing&lt;/em&gt; &#928;. each analysis step considers--for an observed message reception--what earlier transmissions would explain it. the lts then contains a transition from a fragmentary execution containing the reception to a richer one containing an explaining transmission. the strand space protocol analysis tool cpsa generates some of the ltss used.