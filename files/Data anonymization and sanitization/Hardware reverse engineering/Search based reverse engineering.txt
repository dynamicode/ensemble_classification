in this paper we describe a two step process for reverse engineering the software architecture of a system directly from its source code. the first step involves clustering the modules from the source code into abstract structures called subsystems. the second step involves reverse engineering the subsystem-level relations using a formal (and visual) architectural constraint language. we use search techniques to accomplish both of these steps, and have implemented a suite of integrated tools to support the reverse engineering process. through a case study, we demonstrate how our tools can be used to extract the software architecture of an open-source software package from its source code without having any a priori knowledge about its design.