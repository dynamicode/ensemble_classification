this paper investigates secure ways to interact with tamper-resistant hardware leaking a strictly bounded amount of information. architectural support for the interaction mechanisms is studied and performance implications are evaluated. the interaction mechanisms are built on top of a recently-proposed secure processor ascend[ascend-stc12]. ascend is chosen because unlike other tamper-resistant hardware systems, ascend completely obfuscates pin traffic through the use of oblivious ram (oram) and periodic oram accesses. however, the original ascend proposal, with the exception of main memory, can only communicate with the outside world at the beginning or end of program execution; no intermediate information transfer is allowed. our system, stream-ascend, is an extension of ascend that enables intermediate interaction with the outside world. stream-ascend significantly improves the generality and efficiency of ascend in supporting many applications that fit into a streaming model, while maintaining the same security level.simulation results show that with smart scheduling algorithms, the performance overhead of stream-ascend relative to an insecure and idealized baseline processor is only 24.5%, 0.7%, and 3.9% for a set of streaming benchmarks in a large dataset processing application. stream-ascend is able to achieve a very high security level with small overheads for a large class of applications.