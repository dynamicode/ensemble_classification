aggregate message authentication codes, as introduced by katz and lindell (ct-rsa 2008), combine several macs into a single value, which has roughly the same size as an ordinary mac. these schemes reduce the communication overhead significantly and are therefore a promising approach to achieve authenticated communication in mobile ad-hoc networks, where communication is prohibitively expensive. here we revisit the unforgeability notion for aggregate macs and discuss that the definition does not prevent "mix-and-match" attacks in which the adversary turns several aggregates into a "fresh" combination, i.e., into a valid aggregate on a sequence of messages which the attacker has not requested before. in particular, we show concrete attacks on the previous scheme. to capture the broader class of combination attacks, we provide a stronger security notion of aggregation unforgeability. while we can provide stateful transformations lifting (non-ordered) schemes to meet our stronger security notion, for the statefree case we switch to the new notion of history-free sequential aggregation. this notion is somewhat between non-ordered and sequential schemes and basically says that the aggregation algorithm is carried out in a sequential order but must not depend on the preceding messages in the sequence, but only on the shorter input aggregate and the local message. we finally show that we can build an aggregation-unforgeable, history-free sequential mac scheme based on general assumptions.